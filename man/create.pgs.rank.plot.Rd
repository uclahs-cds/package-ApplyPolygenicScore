% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-pgs-rank.R
\name{create.pgs.rank.plot}
\alias{create.pgs.rank.plot}
\title{Plot PGS Rank}
\usage{
create.pgs.rank.plot(
  pgs.data,
  phenotype.columns = NULL,
  missing.genotype.style = "count",
  output.dir = NULL,
  filename.prefix = NULL,
  file.extension = "png",
  width = 8,
  height = 8,
  xaxis.cex = 1.2,
  yaxis.cex = 1,
  titles.cex = 1.2,
  border.padding = 1
)
}
\arguments{
\item{pgs.data}{data.frame PGS data containing the following columns: Indiv, percentile, decile, quartile, n.missing.genotypes, percent.missing.genotypes, and optionally user-defined percentiles and phenotype covariates.
This function is designed to work with the output of the function apply.polygenic.score().}

\item{phenotype.columns}{character vector of column names in pgs.data containing phenotype covariates to plot as color bars. Default is NULL.}

\item{missing.genotype.style}{character style of missing genotype barplot. Default is 'count'. Options are 'count' or 'percent'.}

\item{output.dir}{character directory path to write plot to file. Default is NULL in which case the plot is returned as lattice multipanel object.}

\item{filename.prefix}{character prefix for plot filename.}

\item{file.extension}{character file extension for plot file. Default is 'png'.}

\item{width}{numeric width of plot in inches.}

\item{height}{numeric height of plot in inches.}

\item{xaxis.cex}{numeric size of x-axis labels.}

\item{yaxis.cex}{numeric size of y-axis labels.}

\item{titles.cex}{numeric size of plot titles.}

\item{border.padding}{numeric padding around plot border.}
}
\value{
lattice multipanel object if output.dir is NULL, otherwise a file is written to output.dir.
}
\description{
Plot PGS percentile rank of each sample as a barplot, plot missing genotypes if any are present, plot corresponding decile and quartile markers as a heatmap, optionally plot phenotype covariates as color bars.
}
\examples{
set.seed(200);
percentiles <- get.pgs.percentiles(rnorm(200, 0, 1))
pgs.data <- data.frame(
 Indiv = paste0('sample', 1:200),
 percentile = percentiles$percentile,
 decile = percentiles$decile,
 quartile = percentiles$quartile,
 n.missing.genotypes = sample(1:10, 200, replace = TRUE),
 percent.missing.genotypes = sample(1:10, 200, replace = TRUE) / 100,
 continuous.pheno = rnorm(200, 1, 1),
 categorical.pheno = sample(letters[1:5], 200, replace = TRUE),
 binary.pheno = sample(c(0,1), 200, replace = TRUE)
 );

temp.dir <- tempdir();

create.pgs.rank.plot(
 pgs.data,
 phenotype.columns = c('continuous.pheno', 'categorical.pheno', 'binary.pheno'),
 missing.genotype.style = 'percent',
 output.dir = temp.dir,
 filename.prefix = 'example-rank-plot'
 )
}
